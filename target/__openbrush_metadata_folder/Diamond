"#[doc =\n\" Trait to be implemented in the contract which holds the diamond storage\"]\npub trait Diamond\n{\n    #[doc =\n    \" This function is used to add, replace and remove facets from the diamond\"]\n    #[doc = \"\"]\n    #[doc =\n    \" `cuts` vector of facet cuts, each cut contains the code hash of the facet\"]\n    #[doc = \" as well as the selectors of functions.\"]\n    #[doc = \" If `cuts` is empty, we will remove this facet from diamond\"]\n    #[doc =\n    \" If `cuts` contains a selector which already exists for a different facet we will return an error (user should remove this facet first)\"]\n    #[doc =\n    \" If `cuts` does not contain some selectors which are already registered for this facet, those selectors will be removed from diamond\"]\n    #[doc =\n    \" `init` optional struct which identifies a call to be executed, this struct contains the code hash\"]\n    #[doc =\n    \" of the executed contract, selector of the executed function and input data to be passed to the called\"]\n    #[ink(message)] fn\n    diamond_cut(& mut self, cuts : Vec < FacetCut >, init : Option < InitCall\n    >) -> Result < (), DiamondError > ;\n}"