"#[doc =\n\" This contract allows splitting native token payments among a group of accounts. The sender does not need to be aware\"]\n#[doc =\n\" that the native token will be split in this way, since it is handled transparently by the contract.\"]\n#[doc = \"\"]\n#[doc =\n\" The split can be in equal parts or in any other arbitrary proportion. The way this is specified is by assigning each\"]\n#[doc =\n\" account to a number of shares. Of all the native tokens that this contract receives, each account will then be able to claim\"]\n#[doc =\n\" an amount proportional to the percentage of total shares they were assigned.\"]\n#[doc = \"\"]\n#[doc =\n\" `PaymentSplitter` follows a pull payment model. This means that payments are not automatically forwarded to the\"]\n#[doc =\n\" accounts but kept in this contract, and the actual transfer is triggered as a separate step by calling the `release`\"]\n#[doc = \" function.\"] pub trait PaymentSplitter\n{\n    #[doc = \" Getter for the total shares held by payees.\"] #[ink(message)]\n    #[ink(selector = 2040411684u32)] fn total_shares(& self) -> Balance ;\n    #[doc = \" Getter for the total amount of native token already released.\"]\n    #[ink(message)] #[ink(selector = 696265406u32)] fn total_released(& self)\n    -> Balance ;\n    #[doc = \" Getter for the amount of shares held by an account.\"]\n    #[ink(message)] #[ink(selector = 2873236965u32)] fn\n    shares(& self, account : AccountId) -> Balance ;\n    #[doc =\n    \" Getter for the amount of native token already released to a payee.\"]\n    #[ink(message)] #[ink(selector = 2642618273u32)] fn\n    released(& self, account : AccountId) -> Balance ;\n    #[doc = \" Getter for the address of the payee number `index`.\"]\n    #[ink(message)] #[ink(selector = 1828221412u32)] fn\n    payee(& self, index : u32) -> Option < AccountId > ;\n    #[doc =\n    \" The native token received will be logged with `PaymentReceived` events.\"]\n    #[doc =\n    \" Note that these events are not fully reliable: a contract can receive a native token\"]\n    #[doc =\n    \" without triggering this function. This only affects the reliability of the events\"]\n    #[doc = \" and not the actual splitting of the native token.\"] #[doc = \"\"]\n    #[doc = \" On success a `PayeeAdded` event is emitted.\"]\n    #[ink(message, payable)] #[ink(selector = 686692301u32)] fn\n    receive(& mut self) ;\n    #[doc =\n    \" Triggers a transfer to `account` of the amount of native token they are owed, according to their percentage of the\"]\n    #[doc = \" total shares and their previous withdrawals.\"] #[doc = \"\"]\n    #[doc = \" On success a `PaymentReleased` event is emitted.\"]\n    #[ink(message)] #[ink(selector = 949048064u32)] fn\n    release(& mut self, account : AccountId) -> Result < (),\n    PaymentSplitterError > ;\n}"